.panel-wrapper
  .alert.alert-info
    = t("places.wizard.calendar.calendar_hint")

  %fieldset
    .row
      #add-button.center
        = button_tag t("places.wizard.calendar.add_new"), :id => 'open-new-availability', :class => 'btn btn-info btn-large'
    %div#new-availability-form.hide
      =# render 'availabilities/form'

  %div#all-availabilities
    = #render 'availabilities/list_all', :availabilities => @availabilities, :place => @place

:javascript

  $("#open-new-availability").unbind('click').click(function() {
    add_datepicker();
    $("#new-availability-form").show();
    $("#open-new-availability").hide();
    return false;
  });

  $(".open-edit-availability").die().live("click", function() {
    $(this).parents(".availabilities-block").children(".edit-data-container").show();
    return false;
  });

  $(".cancel-edit-availability").die().live("click", function() {
    $(this).parents(".edit-data-container").hide();
    return false;
  });

  $(".availability_type").die().live("change", function() {
    if ($(this).val() == '1') {
      $(this).next().val('').hide();
    } else {
      $(this).next().show();
    }
  });

  $(".edit-availability").die().live("click", function() {
    var save_btn = $(this);
    var mother = save_btn.parents(".availabilities-block");
    var form = mother.children(".edit-data-container");
    var place_id = $("#place_id").val();

    var aid = form.children('[name="id"]').val();

    showIndicator(save_btn);
    save_btn.attr('disabled', 'disabled');

    $.ajax({
      type: 'PUT',
      url: '/places/'+place_id+'/availabilities/'+aid,
      data: {
        'date_start':form.children('[name="date_start"]').val(),
        'date_end':form.children('[name="date_end"]').val(),
        'availability_type':form.find('[name="availability_type"]').val(),
        'price_per_night':form.find('[name="price_per_night"]').val()
      },
      success: function(data) {
        if (data.stat) {
          mother.replaceWith(data.data);

          add_datepicker();
        } else {
          alert(data.data);
          hideIndicator(save_btn);
          save_btn.removeAttr('disabled');
        }
      },
      error: function() {
        alert("#{t("places.wizard.calendar.something_went_wrong")}");
        hideIndicator(save_btn);
        save_btn.removeAttr('disabled');
      }
    });

    return false;
  });

  $(".delete-availability").die()
    .live("ajax:beforeSend", function() {
      showIndicator($(this));
    })
    .live("ajax:success", function(evt, data) {
      if (data.stat) {
        var mother = $(this).parents(".availabilities-block");
        mother.children(".edit-data-container").hide();
        mother.hide("drop", { direction: "left" }, function() {
          if ($(this).next(".availabilities-block").length === 0 && $(this).prev(".availabilities-block").length === 0) {
            $(this).prev("h4.year-header").hide("drop", {direction:"left"}, function() { $(this).remove() });
          }

          $(this).remove();
        });
        
      } else {
        alert(data.data);
        hideIndicator($(this));
      }
    })
    .live("ajax:error", function() {
      alert("#{t("places.wizard.calendar.something_went_wrong")}");
      hideIndicator($(this));
    });
